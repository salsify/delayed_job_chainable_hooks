workflows:
  build:
    jobs:
      - lint:
          ruby_version: "2.7.2"
      - test:
          matrix:
            parameters:
              ruby_version:
                - "2.7.2"
                - "3.0.0"
version: 2.1
jobs:
  lint:
    parameters:
      ruby_version:
        type: string
    docker:
      - image: salsify/ruby_ci:<< parameters.ruby_version >>
    working_directory: ~/delayed_job_chainable_hooks
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-gems-ruby-<< parameters.ruby_version >>-{{ checksum "delayed_job_chainable_hooks.gemspec" }}-{{ checksum "Gemfile" }}
            - v1-gems-<< parameters.ruby_version >>-
      - run:
          name: Install Gems
          command: |
            if ! bundle check --path=vendor/bundle; then
              bundle install --path=vendor/bundle --jobs=4 --retry=3
              bundle clean
            fi
      - save_cache:
          key: v1-gems-ruby-<< parameters.ruby_version >>-{{ checksum "delayed_job_chainable_hooks.gemspec" }}-{{ checksum "Gemfile" }}
          paths:
            - "vendor/bundle"
      - run:
          name: Run Rubocop
          command: bundle exec rubocop --config .rubocop.yml
  test:
    parameters:
      ruby_version:
        type: string
    docker:
      - image: salsify/ruby_ci:<< parameters.ruby_version >>
        environment:
          CIRCLE_TEST_REPORTS: "test-results"
          PGHOST: "localhost"
          PGUSER: "postgres"
      - image: circleci/postgres:12.3-ram
        environment:
          POSTGRES_USER: "postgres"
          POSTGRES_DB: "circle_test"
          POSTGRES_HOST_AUTH_METHOD: "trust"
    working_directory: ~/delayed_job_chainable_hooks
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-gems-ruby-<< parameters.ruby_version >>-{{ checksum "delayed_job_chainable_hooks.gemspec" }}-{{ checksum "Gemfile" }}
            - v1-gems-<< parameters.ruby_version >>-
      - run:
          name: Install Gems
          command: |
            if ! bundle check --path=vendor/bundle; then
              bundle install --path=vendor/bundle --jobs=4 --retry=3
              bundle clean
            fi
      - save_cache:
          key: v1-gems-ruby-<< parameters.ruby_version >>-{{ checksum "delayed_job_chainable_hooks.gemspec" }}-{{ checksum "Gemfile" }}
          paths:
            - "vendor/bundle"
      - run:
          name: Wait for Database
          command: dockerize -wait tcp://localhost:5432 -timeout 60s
#      - run:
#          name: Wait for Database User
#          command: t=30; for i in `seq $t`; do psql -h localhost -p 5432 -U ubuntu -d circle_test -c '\q' && break; [ $i -eq $t ] && return 2; sleep 1; done;
      - run:
          name: Run Tests
          command: |
            bundle exec rspec --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec/junit.xml --format progress spec
      - store_test_results:
          path: "test-results"
